@phdthesis{DBLP:phd/hal/Keller13,
  author    = {Chantal Keller},
  title     = {A Matter of Trust: Skeptical Communication Between Coq and External
               Provers. (Question de confiance : communication sceptique entre Coq
               et des prouveurs externes)},
  school    = {{\'{E}}cole Polytechnique, Palaiseau, France},
  year      = {2013},
  url       = {https://tel.archives-ouvertes.fr/pastel-00838322},
  timestamp = {Tue, 21 Jul 2020 00:40:48 +0200},
  biburl    = {https://dblp.org/rec/phd/hal/Keller13.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@phdthesis{bohme,
	author = {Sascha B\"ohme},
	title = {Proving Theorems of Higher-Order Logic with SMT Solvers},
	school = {Technische Universit\"at M\"unchen},
	year = 2012
}

@inproceedings{10.5555/645902.672777,
	author = {Boulton, Richard J. and Gordon, Andrew and Gordon, Michael J. C. and Harrison, John and Herbert, John and Tassel, John Van},
	title = {Experience with Embedding Hardware Description Languages in HOL},
	year = {1992},
	isbn = {0444896864},
	publisher = {North-Holland Publishing Co.},
	address = {NLD},
	booktitle = {Proceedings of the IFIP TC10/WG 10.2 International Conference on Theorem Provers in Circuit Design: Theory, Practice and Experience},
	pages = {129–156},
	numpages = {28}
}

@Inbook{Barrett2018,
	author="Barrett, Clark
	and Tinelli, Cesare",
	editor="Clarke, Edmund M.
	and Henzinger, Thomas A.
	and Veith, Helmut
	and Bloem, Roderick",
	title="Satisfiability Modulo Theories",
	bookTitle="Handbook of Model Checking",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="305--343",
	abstract="Satisfiability Modulo Theories (SMT) refers to the problem of determining whether a first-order formula is satisfiable with respect to some logical theory. Solvers based on SMT are used as back-end engines in model-checking applications such as bounded, interpolation-based, and predicate-abstraction-based model checking. After a brief illustration of these uses, we survey the predominant techniques for solving SMT problems with an emphasis on the lazy approach, in which a propositional satisfiability (SAT) solver is combined with one or more theory solvers. We discuss the architecture of a lazy SMT solver, give examples of theory solvers, show how to combine such solvers modularly, and mention several extensions of the lazy approach. We also briefly describe the eager approach in which the SMT problem is reduced to a SAT problem. Finally, we discuss how the basic framework for determining satisfiability can be extended with additional functionality such as producing models, proofs, unsatisfiable cores, and interpolants.",
	isbn="978-3-319-10575-8",
	doi="10.1007/978-3-319-10575-8_11",
	url="https://doi.org/10.1007/978-3-319-10575-8_11"
}

@InProceedings{10.1007/978-3-642-39799-8_1,
	author="Kov{\'a}cs, Laura
	and Voronkov, Andrei",
	editor="Sharygina, Natasha
	and Veith, Helmut",
	title="First-Order Theorem Proving and Vampire",
	booktitle="Computer Aided Verification",
	year="2013",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="1--35",
	abstract="In this paper we give a short introduction in first-order theorem proving and the use of the theorem prover Vampire. We discuss the superposition calculus and explain the key concepts of saturation and redundancy elimination, present saturation algorithms and preprocessing, and demonstrate how these concepts are implemented in Vampire. Further, we also cover more recent topics and features of Vampire designed for advanced applications, including satisfiability checking, theory reasoning, interpolation, consequence elimination, and program analysis.",
	isbn="978-3-642-39799-8"
}

@book{10.5555/1791547,
	author = {Nipkow, Tobias and Wenzel, Markus and Paulson, Lawrence C.},
	title = {Isabelle/HOL: A Proof Assistant for Higher-Order Logic},
	year = {2002},
	isbn = {3540433767},
	publisher = {Springer-Verlag},
	address = {Berlin, Heidelberg}
}

@article{DBLP:journals/corr/cs-LO-9301106,
	author    = {Lawrence C. Paulson},
	title     = {Isabelle: The Next 700 Theorem Provers},
	journal   = {CoRR},
	volume    = {cs.LO/9301106},
	year      = {1993},
	url       = {https://arxiv.org/abs/cs/9301106},
	timestamp = {Fri, 10 Jan 2020 12:58:43 +0100},
	biburl    = {https://dblp.org/rec/journals/corr/cs-LO-9301106.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{hurd2003d,
	author = {Joe Hurd},
	title = {First-Order Proof Tactics in Higher-Order Logic Theorem Provers},
	pages = {56--68},
	crossref = {strata2003},
	url = {http://www.gilith.com/papers},
	abstract = {In this paper we evaluate the effectiveness of first-order proof
	procedures when used as tactics for proving subgoals in a higher-order
	logic interactive theorem prover. We first motivate why such
	first-order proof tactics are useful, and then describe the core
	integrating technology: an `LCF-style' logical kernel for clausal
	first-order logic. This allows the choice of different logical
	mappings between higher-order logic and first-order logic to be used
	depending on the subgoal, and also enables several different
	first-order proof procedures to cooperate on constructing the proof.
	This work was carried out using the HOL4 theorem prover; we comment on
	the ease of transferring the technology to other higher-order logic
	theorem provers.}
}

@book{10.5555/155278,
	author = {Gordon, M. J. C. and Melham, T. F.},
	title = {Introduction to HOL: A Theorem Proving Environment for Higher Order Logic},
	year = {1993},
	isbn = {0521441897},
	publisher = {Cambridge University Press},
	address = {USA}
}

@Inbook{Barrett2018,
	author="Barrett, Clark
	and Tinelli, Cesare",
	editor="Clarke, Edmund M.
	and Henzinger, Thomas A.
	and Veith, Helmut
	and Bloem, Roderick",
	title="Satisfiability Modulo Theories",
	bookTitle="Handbook of Model Checking",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="305--343",
	abstract="Satisfiability Modulo Theories (SMT) refers to the problem of determining whether a first-order formula is satisfiable with respect to some logical theory. Solvers based on SMT are used as back-end engines in model-checking applications such as bounded, interpolation-based, and predicate-abstraction-based model checking. After a brief illustration of these uses, we survey the predominant techniques for solving SMT problems with an emphasis on the lazy approach, in which a propositional satisfiability (SAT) solver is combined with one or more theory solvers. We discuss the architecture of a lazy SMT solver, give examples of theory solvers, show how to combine such solvers modularly, and mention several extensions of the lazy approach. We also briefly describe the eager approach in which the SMT problem is reduced to a SAT problem. Finally, we discuss how the basic framework for determining satisfiability can be extended with additional functionality such as producing models, proofs, unsatisfiable cores, and interpolants.",
	isbn="978-3-319-10575-8",
	doi="10.1007/978-3-319-10575-8_11",
	url="https://doi.org/10.1007/978-3-319-10575-8_11"
}

@InProceedings{10.1007/978-3-642-24364-6_7,
	author="Bobot, Fran{\c{c}}ois
	and Paskevich, Andrei",
	editor="Tinelli, Cesare
	and Sofronie-Stokkermans, Viorica",
	title="Expressing Polymorphic Types in a Many-Sorted Language",
	booktitle="Frontiers of Combining Systems",
	year="2011",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="87--102",
	abstract="In this paper, we study translation from a first-order logic with polymorphic types la ML (of which we give a formal description) to a many-sorted or one-sorted logic as accepted by mainstream automated theorem provers. We consider a three-stage scheme where the last stage eliminates polymorphic types while adding the necessary ``annotations'' to preserve soundness, and the first two stages serve to protect certain terms so that they can keep their original unannotated form. This protection allows us to make use of provers' built-in theories and operations. We present two existing translation procedures as sound and complete instances of this generic scheme. Our formulation generalizes over the previous ones by allowing us to protect terms of arbitrary monomorphic types. In particular, we can benefit from the built-in theory of arrays in SMT solvers such as Z3, CVC3, and Yices. The proposed methods are implemented in the Why3 tool and we compare their performance in combination with several automated provers.",
	isbn="978-3-642-24364-6"
}

@MISC{BarFT-SMTLIB,
	author =	 {Clark Barrett and Pascal Fontaine and Cesare Tinelli},
	title =	 {{The Satisfiability Modulo Theories Library (SMT-LIB)}},
	howpublished = {{\tt www.SMT-LIB.org}},
	year =	 2016,
}

@Article{BarST-PDPAR-06,
	author =	 {Clark Barrett and Igor Shikanian and Cesare Tinelli},
	title =	 {An Abstract Decision Procedure for Satisfiability in
	the Theory of Recursive Data Types},
	journal = 	 {Electronic Notes in Theoretical Computer Science},
	year = 	 2007,
	volume = 	 174,
	number = 	 8,
	pages = 	 {23-37},
}

@MISC{CoqZ,
	author = {Pierre Crégut},
	title =	 {{The Coq Z Library}},
	howpublished = {{\tt coq.inria.fr/library/Coq.Numbers.BinNums.html}}
}

@MISC{CoqBool,
	title =	 {{The Coq Bool Library}},
	howpublished = {{\tt https://coq.inria.fr/library/Coq.Bool.Bool.html}}
}

@article{DBLP:journals/fmsd/StumpORHT13,
	author    = {Aaron Stump and
	Duckki Oe and
	Andrew Reynolds and
	Liana Hadarean and
	Cesare Tinelli},
	title     = {{SMT} proof checking using a logical framework},
	journal   = {Formal Methods Syst. Des.},
	volume    = {42},
	number    = {1},
	pages     = {91--118},
	year      = {2013},
	url       = {https://doi.org/10.1007/s10703-012-0163-3},
	doi       = {10.1007/s10703-012-0163-3},
	timestamp = {Fri, 13 Mar 2020 10:55:12 +0100},
	biburl    = {https://dblp.org/rec/journals/fmsd/StumpORHT13.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{Besson1,
	author       = "FrÃ©dÃ©ric Besson and Pascal Fontaine and Laurent ThÃ©ry",
	title        = "A Flexible Proof Format for {SMT}: a Proposal",
	year         = "2011",
	booktitle =    pxtp,
}

@inproceedings{DBLP:journals/corr/EkiciKKMRT16,
  author    = {Burak Ekici and
               Guy Katz and
               Chantal Keller and
               Alain Mebsout and
               Andrew J. Reynolds and
               Cesare Tinelli},
  editor    = {Jasmin Christian Blanchette and
               Cezary Kaliszyk},
  title     = {Extending SMTCoq, a Certified Checker for {SMT} (Extended Abstract)},
  booktitle = {Proceedings First International Workshop on Hammers for Type Theories,
               HaTT@IJCAR 2016, Coimbra, Portugal, July 1, 2016},
  series    = {{EPTCS}},
  volume    = {210},
  pages     = {21--29},
  year      = {2016},
  url       = {https://doi.org/10.4204/EPTCS.210.5},
  doi       = {10.4204/EPTCS.210.5},
  timestamp = {Sat, 19 Oct 2019 19:22:55 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/EkiciKKMRT16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@TECHREPORT{BarFT-RR-15,
	author =	 {Clark Barrett and Pascal Fontaine and Cesare Tinelli},
	title =	 {{The SMT-LIB Standard: Version 2.5}},
	institution =	 {Department of Computer Science, The University of Iowa},
	year =	 2015,
	note =	 {Available at {\tt www.SMT-LIB.org}}
}